name: Build and Release Status

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
    - uses: actions/checkout@v2
    - name: Checkout submodules
      shell: bash
      run: |
        auth_header="$(git config --local --get http.https://github.com/.extraheader)"
        git submodule sync --recursive
        git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1
    - name: Use Node.js 12.x
      uses: actions/setup-node@v1
      with:
        node-version: 12.x
    - name: npm install
      run: npm install
      env:
        CI: true
    - name: npm build
      run: npm run build --if-present
      env:
        CI: true
        
  generate-latest:
    name: Update Latest Release
    needs: build
    runs-on: ubuntu-latest
    steps: 
    - name: Checkout repository
      uses: actions/checkout@master
    - name: Create new latest
      uses: EndBug/latest-tag@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Leave this line unchanged
      
        
  release:
    name: Release
    needs: generate-latest
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        
    steps:
    - uses: actions/checkout@v2
    - name: Checkout submodules
      shell: bash
      run: |
        auth_header="$(git config --local --get http.https://github.com/.extraheader)"
        git submodule sync --recursive
        git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1
    - name: Use Node.js 12.x
      uses: actions/setup-node@v1
      with:
        node-version: 12.x
    - name: npm install
      run: npm install
      env:
        CI: true
    - name: npm release
      run: npm run release
    - name: Package releases
      if: matrix.os != 'macOS-latest'
      run: |
        7z a dist/flashpoint-launcher_${{ matrix.os }}.zip ./dist/*/*
    - name: Package releases (mac)
      if: matrix.os == 'macOS-latest'
      run: |
        zip -r dist/flashpoint-launcher_${{ matrix.os }}.zip ./dist/*/*
    - name: Package Setup
      if: matrix.os == 'windows-latest'
      run: |
        mv dist/*.exe dist/FP_Win32_Setup.exe
    - name: Upload dist zips to latest release
      uses: svenstaro/upload-release-action@v1-release
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: dist/flashpoint-launcher_${{ matrix.os }}.zip
        asset_name: flashpoint-launcher_${{ matrix.os }}.zip
        tag: latest
        overwrite: true
    - name: Upload setup to latest release
      if: matrix.os == 'windows-latest'
      uses: svenstaro/upload-release-action@v1-release
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: dist/FP_Win32_Setup.exe
        asset_name: FP_Win32_Setup.exe
        tag: latest
        overwrite: true
